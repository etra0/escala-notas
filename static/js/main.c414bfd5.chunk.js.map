{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","ScoreTable","props","rows","valid","notaAprobacion","Fade","in","Table","TableHead","TableRow","TableCell","TableBody","map","p","n","key","style","color","toFixed","parseFloat","ParameterInput","keyName","values","handler","name","value","className","TextField","label","onChange","v","target","fullWidth","InputProps","endAdornment","error","isNaN","App","useState","parameters","setParameters","useEffect","data","JSON","parse","localStorage","getItem","exigencia","notaMin","notaMax","puntajeMin","puntajeMax","incremento","console","log","tableData","setTableData","validTable","setValidTable","changeValue","_p","stringify","isValid","Object","keys","reduce","acc","forEach","length","calc","puntajeAprobacion","m1","a1","m2","a2","arr","i","push","setItem","ThemeProvider","Grid","container","spacing","item","xs","md","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c414bfd5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nfunction ScoreTable(props) {\n  const { rows, valid, notaAprobacion } = props;\n\n  return (\n    <Fade in={valid}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Puntos</TableCell>\n            <TableCell>Nota</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(([p, n]) => (\n            <TableRow key={p}>\n              <TableCell>{p}</TableCell>\n              <TableCell\n                style={{ color: n.toFixed(1) < parseFloat(notaAprobacion) ? \"#f34a4a\" : \"white\" }}\n              >\n                {n.toFixed(1)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Fade>\n  );\n}\n\nfunction ParameterInput(props) {\n  const { keyName, values, handler } = props;\n  const { name, value } = values;\n\n  return (\n    <div className=\"input-box\">\n      <TextField\n        label={name}\n        onChange={v => handler(keyName, v.target.value)}\n        type=\"number\"\n        fullWidth={true}\n        value={value}\n        InputProps={keyName == \"exigencia\" ? { endAdornment: \"%\" } : {}}\n        error={isNaN(value) || value < 0}\n      />\n    </div>\n  );\n}\n\nfunction App() {\n\n  const [parameters, setParameters] = useState({});\n  useEffect(() => {\n    const dataTemplate = {\n      exigencia: { name: \"Exigencia\", value: 60 },\n      notaAprobacion: { name: \"Nota aprobación\", value: 4.0 },\n      notaMin: { name: \"Nota mínima\", value: 2.0 },\n      notaMax: { name: \"Nota máxima\", value: 7.0 },\n      puntajeMin: { name: \"Puntaje mínimo\", value: 0 },\n      puntajeMax: { name: \"Puntaje máximo\", value: 100 },\n      incremento: { name: \"Incremento\", value: 1 }\n    }\n\n    const data = JSON.parse(localStorage.getItem('data')) || dataTemplate;\n    setParameters(data);\n    console.log(data)\n\n  }, [])\n\n\n  const [tableData, setTableData] = useState([]);\n  const [validTable, setValidTable] = useState(false);\n\n  const changeValue = (key, value) => {\n    const _p = JSON.parse(JSON.stringify(parameters));\n    _p[key].value = value;\n    setParameters(_p);\n  };\n\n  useEffect(() => {\n    const isValid =\n      Object.keys(parameters).reduce(\n        (acc, v) =>\n          acc +\n          (typeof parameters[v].value === \"undefined\" ||\n            isNaN(parseFloat(parameters[v].value))),\n        0\n      ) == 0;\n    setValidTable(isValid);\n\n    const _p = JSON.parse(JSON.stringify(parameters));\n    Object.keys(_p).forEach(v => (_p[v].values = parseFloat(_p[v].values)));\n\n    if (Object.keys(_p).length === 0 || _p.incremento.value <= 0 || !isValid) return;\n    let calc = p => {\n      let exigencia = _p.exigencia.value / 100;\n      let puntajeAprobacion = _p.puntajeMax.value * exigencia;\n      let m1 =\n        (_p.notaAprobacion.value - _p.notaMin.value) /\n        (puntajeAprobacion - _p.puntajeMin.value);\n      let a1 = _p.notaMin.value - m1 * _p.puntajeMin.value;\n\n      let m2 =\n        (_p.notaMax.value - _p.notaAprobacion.value) /\n        (_p.puntajeMax.value - puntajeAprobacion);\n      let a2 = _p.notaMax.value - m2 * _p.puntajeMax.value;\n\n\n      return p >= puntajeAprobacion ? m2 * p + a2 : m1 * p + a1;\n    };\n\n    let arr = [];\n    for (\n      let i = _p.puntajeMin.value;\n      i <= _p.puntajeMax.value;\n      i += +_p.incremento.value\n    ) {\n      arr.push([i, calc(i)]);\n    }\n\n    setTableData(arr);\n    localStorage.setItem('data', JSON.stringify(_p));\n\n  }, [parameters]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <div className=\"App-body\">\n          <div className=\"App-content\">\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4}>\n                {Object.keys(parameters).map(v => (\n                  <ParameterInput\n                    key={v}\n                    keyName={v}\n                    values={parameters[v]}\n                    handler={changeValue}\n                  />\n                ))}\n              </Grid>\n\n              <Grid item xs={12} md={8}>\n                {tableData && Object.keys(parameters).length && (\n                  <ScoreTable rows={tableData} valid={validTable} notaAprobacion={parameters.notaAprobacion.value} />\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}